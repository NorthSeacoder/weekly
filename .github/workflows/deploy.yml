name: CI

on:
    push:
        branches: [main]

jobs:
    # setup:
    #     runs-on: ubuntu-latest
    #     outputs:
    #         cache-hit: ${{ steps.cache-pnpm.outputs.cache-hit }}
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v4.1.1

    #         # 使用 Cache 来存储和恢复 pnpm 依赖项
    #         - name: Cache pnpm dependencies
    #           id: cache-pnpm
    #           uses: actions/cache@v3.3.2
    #           with:
    #               path: |
    #                   ~/.pnpm-store
    #                   **/node_modules
    #               key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-pnpm-

    #         - name: Install Node.js
    #           uses: actions/setup-node@v3
    #           with:
    #               node-version: '18.x'

    #         - name: Install pnpm
    #           run: npm install -g pnpm

    #         - name: Install pnpm dependencies
    #           if: steps.cache-pnpm.outputs.cache-hit != 'true'
    #           run: pnpm install

    # build:
    #     needs: setup
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v4.1.1

    #         - name: Install Node.js
    #           uses: actions/setup-node@v3
    #           with:
    #               node-version: '18.x'

    #         - name: Install pnpm
    #           run: npm install -g pnpm

    #         - name: Install pnpm dependencies
    #           run: pnpm install

    #         - name: Run build task
    #           run: pnpm run build

    deploy:
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1
              
            - name: Cache Next.js build
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      ${{ github.workspace }}/.next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
            
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install pnpm dependencies
              run: pnpm install

            - name: Run build task
              run: pnpm run build
              env:
                NEXT_PUBLIC_BAIDU_TONGJI: ${{ vars.NEXT_PUBLIC_BAIDU_TONGJI }}
                NEXT_PUBLIC_REPO: ${{ vars.NEXT_PUBLIC_REPO }}
                NEXT_PUBLIC_REPOID: ${{ vars.NEXT_PUBLIC_REPOID }}
                NEXT_PUBLIC_CATEGORY: ${{ vars.NEXT_PUBLIC_CATEGORY }}
                NEXT_PUBLIC_CATEGORY_ID: ${{ vars.NEXT_PUBLIC_CATEGORY_ID }}
                NEXT_PUBLIC_MAPPING: ${{ vars.NEXT_PUBLIC_MAPPING }}
                NEXT_PUBLIC_INPUT_POSITION: ${{ vars.NEXT_PUBLIC_INPUT_POSITION }}
                NEXT_PUBLIC_THEME: ${{ vars.NEXT_PUBLIC_THEME }}
                NEXT_PUBLIC_LANG: ${{ vars.NEXT_PUBLIC_LANG }}
                NEXT_PUBLIC_UMAMI: ${{ vars.NEXT_PUBLIC_UMAMI }}
            - name: Deploy to Server
              uses: easingthemes/ssh-deploy@main
              with:
                  SSH_PRIVATE_KEY: ${{ secrets.ALIYUN_SERVER_ACCESS_TOKEN }}
                  ARGS: '-rlgoDzvc -i --delete'
                  SOURCE: 'out/'
                  SCRIPT_BEFORE: |
                      whoami
                      ls -al
                      pwd
                  REMOTE_HOST: ${{ secrets.ALIYUN_SERVER_HOST }}
                  REMOTE_USER: 'root'
                  TARGET: '/opt/1panel/apps/openresty/openresty/www/sites/weekly.mengpeng.tech/index/'
                  EXCLUDE: '/dist/, /node_modules/'

---
import {Icon} from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import {trimSlash, getAsset, getHomePermalink, getPermalink} from '~/utils/permalinks';
import type {CallToAction} from '~/types';

interface Link {
    text?: string;
    href?: string;
    ariaLabel?: string;
    icon?: string;
}

export interface Props {
    id?: string;
    isSticky?: boolean;
    isDark?: boolean;
    isFullWidth?: boolean;
    showToggleTheme?: boolean;
    showRssFeed?: boolean;
    showEmail?: boolean;
    position?: string;
}

const {
    id = 'header',
    isSticky = false,
    isDark = false,
    isFullWidth = false,
    showToggleTheme = false,
    showRssFeed = false,
    showEmail = false,
    position = 'center'
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
const links: Array<Link> = [
    {
        text: '首页',
        href: getPermalink('/')
    },
    {
        text: '周刊',
        href: getPermalink('/weekly')
    },
    // {
    //     text: '标签',
    //     href: getPermalink('/tags')
    // },
    // {
    //     text: '博客',
    //     href: getPermalink('/blog')
    // }
];
const actions: Array<CallToAction> = [];
---

<header
    class:list={[
        {sticky: isSticky, relative: !isSticky, dark: isDark},
        'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out'
    ]}
    {...isSticky ? {'data-aw-sticky-header': true} : {}}
    {...id ? {id} : {}}>
    <div class='absolute inset-0'></div>
    <div
        class:list={[
            'relative text-default py-3 px-3 md:px-6 mx-auto w-full',
            {
                'md:flex md:justify-between': position !== 'center'
            },
            {
                'md:grid md:grid-cols-3 md:items-center': position === 'center'
            },
            {
                'max-w-7xl': !isFullWidth
            }
        ]}>
        <div class:list={[{'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right'}, 'flex justify-between']}>
            <a class='flex items-center' href={getHomePermalink()}>
                <Logo />
            </a>
            <div class='flex items-center md:hidden'>
                <ToggleMenu />
            </div>
        </div>
        <nav
            class='items-center w-full md:w-auto hidden md:flex md:mx-5 text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center'
            aria-label='Main navigation'>
            <ul
                class='flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center'>
                {
                    links.map(({text, href}) => (
                        <li>
                            <a
                                class:list={[
                                    'hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap',
                                    {'aw-link-active': href === currentPath}
                                ]}
                                href={href}>
                                {text}
                            </a>
                        </li>
                    ))
                }
            </ul>
        </nav>
        <div
            class:list={[
                {'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left'},
                'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0 md:justify-self-end'
            ]}>
            <div class='items-center flex justify-between w-full md:w-auto'>
                <div class='flex'>
                    {showToggleTheme && <ToggleTheme iconClass='w-6 h-6 md:w-5 md:h-5 md:inline-block' />}
                    {
                        showRssFeed && (
                            <a
                                class='text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center'
                                aria-label='RSS Feed'
                                href={getAsset('/rss.xml')}>
                                <Icon name='tabler:rss' class='w-5 h-5' />
                            </a>
                        )
                    }
                    {
                        showEmail && (
                            <a 
                                class='text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center'
                                aria-label='RSS Feed'
                                href='https://quaily.com/northseacoder'
                                >
                                <Icon name='tabler:mail' class='w-5 h-5' />
                            </a>
                        )
                    }
                </div>
                {
                    actions?.length ? (
                        <span class='ml-4 rtl:ml-0 rtl:mr-4'>
                            {actions.map((btnProps) => (
                                <Button
                                    {...btnProps}
                                    class='ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto'
                                />
                            ))}
                        </span>
                    ) : (
                        ''
                    )
                }
            </div>
        </div>
    </div>
</header>

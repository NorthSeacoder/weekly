---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import { cn } from '~/utils/utils';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose overflow-hidden min-h-screen flex items-center" {...id ? { id } : {}}>
  <!-- 增强背景装饰 -->
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <!-- 主渐变背景 -->
    <div class="absolute inset-0 bg-gradient-to-br from-primary/4 via-accent-warm/2 to-accent-cool/4"></div>
    
    <!-- 简洁装饰元素 -->
    <div class="absolute top-20 left-10 w-32 h-32 bg-gradient-to-br from-primary/8 to-accent-warm/8 rounded-full blur-3xl"></div>
    <div class="absolute bottom-20 right-10 w-24 h-24 bg-gradient-to-br from-accent-cool/8 to-primary/8 rounded-full blur-3xl"></div>
    
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>

  <!-- 主要内容 -->
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 w-full">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-8 md:py-12 lg:py-16">
              <div class="text-center pb-6 md:pb-8 max-w-5xl mx-auto">
        
        <!-- 标语 -->
        {tagline && (
          <div class="mb-6 animate-fade-in-down">
            <span class="inline-flex items-center px-6 py-3 rounded-xl text-sm font-semibold bg-gradient-to-r from-primary/12 via-accent-warm/10 to-accent-cool/12 text-gray-700 dark:text-gray-200 border border-primary/25 backdrop-blur-lg shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105 group cursor-default">
              <svg class="w-5 h-5 mr-3 text-gray-600 dark:text-gray-300 transition-transform duration-300 group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
              <Fragment set:html={tagline} />
              <div class="absolute inset-0 rounded-xl bg-gradient-to-r from-primary/3 to-accent-warm/3 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            </span>
          </div>
        )}
        
        <!-- 主标题 -->
        {title && (
          <h1 class="text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-black leading-[0.9] tracking-tight mb-6 font-heading animate-fade-in-up" style="animation-delay: 0.2s;">
            <span class="bg-gradient-to-r from-gray-900 via-gray-700 to-gray-900 dark:from-white dark:via-gray-100 dark:to-white bg-clip-text text-transparent drop-shadow-sm">
              <Fragment set:html={title} />
            </span>
          </h1>
        )}
        
        <!-- 副标题 -->
        <div class="max-w-4xl mx-auto animate-fade-in-up" style="animation-delay: 0.4s;">
          {subtitle && (
            <p class="text-base md:text-lg lg:text-xl text-gray-600 dark:text-gray-300 mb-8 leading-relaxed font-light tracking-wide">
              <Fragment set:html={subtitle} />
            </p>
          )}
          
          <!-- 行动按钮 -->
          {actions && (
            <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mb-8">
              {Array.isArray(actions) ? (
                actions.map((action, index) => (
                  <div class="animate-fade-in-up" style={`animation-delay: ${0.6 + index * 0.1}s;`}>
                    <Button 
                      variant={action?.variant || 'primary'}
                      size="lg"
                      href={action?.href?.toString() || undefined}
                      target={action?.target || undefined}
                      rel={action?.rel || undefined}
                      class={cn(
                        "px-8 py-4 text-lg font-bold rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl hover:-translate-y-1 hover:scale-105",
                        action?.class
                      )}
                    >
                      {action?.text || action?.title}
                    </Button>
                  </div>
                ))
              ) : (
                <Fragment set:html={actions} />
              )}
            </div>
          )}
        </div>
        
        {content && (
          <div class="animate-fade-in-up" style="animation-delay: 0.8s;">
            <Fragment set:html={content} />
          </div>
        )}
      </div>
      
      <!-- 图片/内容展示 -->
      <div class="animate-fade-in-up" style="animation-delay: 1s;">
        {image && (
          <div class="relative m-auto max-w-7xl">
            <!-- 增强图片装饰背景 -->
            <div class="absolute inset-0 bg-gradient-to-r from-primary/20 via-accent-warm/20 to-accent-cool/20 rounded-3xl blur-3xl transform scale-110 opacity-30 animate-pulse"></div>
            <div class="absolute inset-0 bg-gradient-to-br from-primary/10 via-transparent to-accent-warm/10 rounded-3xl blur-2xl transform scale-105 opacity-40"></div>
            
            <!-- 图片容器 -->
            <div class="relative">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="mx-auto rounded-3xl shadow-3xl shadow-gray-500/25 dark:shadow-gray-900/50 border border-gray-200/40 dark:border-gray-700/40 w-full hover:shadow-[0_60px_120px_-12px_rgba(0,0,0,0.25)] dark:hover:shadow-[0_60px_120px_-12px_rgba(0,0,0,0.4)] transition-all duration-700 hover:scale-[1.02] hover:-translate-y-4"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
  
  <!-- 底部装饰渐变 -->
  <div class="absolute bottom-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-gray-300 dark:via-gray-700 to-transparent opacity-60"></div>
  
  <!-- 底部装饰图案 -->
  <div class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-background/90 to-transparent pointer-events-none"></div>
</section>

<style>
  /* 简洁动画 */
  @keyframes fade-in-down {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fade-in-up {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in-down {
    animation: fade-in-down 0.8s ease-out both;
  }
  
  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out both;
  }

  /* 优化文字渲染 */
  h1 {
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: "kern" 1, "liga" 1, "calt" 1, "ss01" 1;
  }

  /* 响应式字体优化 */
  @media (max-width: 640px) {
    h1 {
      font-size: 2rem;
      line-height: 1.1;
      letter-spacing: -0.02em;
      margin-bottom: 1.5rem;
    }
    
    p {
      font-size: 1rem;
      margin-bottom: 2rem;
    }
  }

  @media (min-width: 641px) and (max-width: 768px) {
    h1 {
      font-size: 2.5rem;
      line-height: 1.05;
      letter-spacing: -0.025em;
      margin-bottom: 1.75rem;
    }
    
    p {
      font-size: 1.125rem;
      margin-bottom: 2.5rem;
    }
  }

  /* 提升可读性 */
  p {
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* 减少动画对于喜欢减少动画的用户 */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    .animate-float,
    .animate-shimmer {
      animation: none !important;
    }
  }

  /* 高对比度模式 */
  @media (prefers-contrast: high) {
    .bg-gradient-to-r {
      background: hsl(var(--primary)) !important;
    }
    
    .text-transparent {
      color: hsl(var(--foreground)) !important;
      background: none !important;
      -webkit-background-clip: unset !important;
      background-clip: unset !important;
    }
  }

  /* 暗色模式特殊处理 */
  .dark .animate-shimmer {
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.02), transparent);
  }

  /* 动画性能优化 */
  .animate-fade-in-down,
  .animate-fade-in-up,
  .animate-float {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  /* 标语悬停效果 */
  span[class*="group"]:hover {
    backdrop-filter: blur(20px) saturate(180%);
  }

  /* 标题字体权重调整 */
  h1 {
    font-variation-settings: "wght" 900;
  }

  /* 副标题字体优化 */
  p {
    font-variation-settings: "wght" 300;
    letter-spacing: 0.01em;
  }

  /* 按钮字体优化 */
  button,
  a[class*="btn"] {
    font-variation-settings: "wght" 600;
    letter-spacing: 0.025em;
  }

  /* 装饰性元素优化 */
  .blur-3xl {
    filter: blur(64px);
  }

  .blur-2xl {
    filter: blur(40px);
  }

  /* 阴影层次优化 */
  .shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25);
  }

  /* 图片加载优化 */
  img {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }

  /* 触摸设备优化 */
  @media (hover: none) {
    .hover\:scale-105:hover,
    .hover\:scale-\[1\.02\]:hover,
    .hover\:-translate-y-2:hover,
    .hover\:-translate-y-4:hover {
      transform: none;
    }
  }

  /* 大屏幕优化 */
  @media (min-width: 1920px) {
    .max-w-7xl {
      max-width: 90rem;
    }
  }

  /* 超大屏幕优化 */
  @media (min-width: 2560px) {
    h1 {
      font-size: 12rem;
    }
    
    p {
      font-size: 3rem;
    }
  }
</style>

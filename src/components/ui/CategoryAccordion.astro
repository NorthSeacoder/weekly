---
import { Icon } from 'astro-icon/components';
import { cn } from '@/lib/utils';

interface Props {
  title: string;
  defaultOpen?: boolean;
  className?: string;
}

const { title, defaultOpen = false, className = '' } = Astro.props;

const accordionClasses = cn(
  'border border-gray-200 dark:border-gray-700 rounded-lg mb-4 overflow-hidden',
  'transition-all duration-300 ease-out',
  'hover:border-gray-300 dark:hover:border-gray-600',
  className
);

const headerClasses = cn(
  'flex justify-between items-center p-4 cursor-pointer',
  'bg-gray-50/80 backdrop-blur-sm dark:bg-gray-800/40',
  'hover:bg-gray-100 dark:hover:bg-gray-800/60',
  'transition-colors duration-300'
);

const iconClasses = cn(
  'w-5 h-5 transition-transform duration-300',
  'text-gray-500 dark:text-gray-400'
);

const bodyClasses = cn(
  'p-4 bg-gray-50/50 dark:bg-gray-800/20',
  'transition-all duration-300 ease-out overflow-hidden'
);
---

<div class={accordionClasses} data-name="category-accordion">
  <div class={headerClasses} data-accordion-header onclick="toggleAccordion(this)">
    <h3 class="text-xl font-semibold text-gray-800 dark:text-gray-200">{title}</h3>
    <div class="flex items-center gap-2">
      <span class="text-xs text-gray-500 dark:text-gray-400 opacity-70">点击展开/收起</span>
      <Icon name="tabler:chevron-down" class={iconClasses} data-accordion-icon />
    </div>
  </div>
  <div class={bodyClasses} data-accordion-body style={defaultOpen ? "" : "max-height: 0px;"}>
    <slot />
  </div>
</div>

<style>
  [data-accordion-body] {
    max-height: 2000px; /* 默认展开状态的高度 */
    box-shadow: inset 0 1px 0 0 rgba(0, 0, 0, 0.05);
  }
  
  [data-accordion-body][style*="max-height: 0px"] {
    padding-top: 0;
    padding-bottom: 0;
    box-shadow: none;
  }
  
  /* 动画效果 */
  [data-accordion-icon] {
    transition: transform 0.3s ease;
  }
  
  [data-accordion-icon].rotate-180 {
    transform: rotate(180deg);
  }
  
  /* 修复主题切换时的闪烁问题 */
  @media (prefers-color-scheme: light) {
    :root:not(.dark) [data-name="category-accordion"] {
      transition: background-color 0.3s ease, border-color 0.3s ease;
    }
  }
  
  @media (prefers-color-scheme: dark) {
    :root.dark [data-name="category-accordion"] {
      transition: background-color 0.3s ease, border-color 0.3s ease;
    }
  }
</style>

<script is:inline>
  // 全局函数，可以直接从HTML调用
  function toggleAccordion(header) {
    const accordion = header.closest('[data-name="category-accordion"]');
    const body = accordion.querySelector('[data-accordion-body]');
    const icon = accordion.querySelector('[data-accordion-icon]');
    
    if (!body || !icon) return;
    
    if (body.style.maxHeight === "0px") {
      body.style.maxHeight = "";
      icon.classList.add('rotate-180');
    } else {
      body.style.maxHeight = "0px";
      icon.classList.remove('rotate-180');
    }
  }
  
  // 运行初始化
  function initialize() {
    const accordions = document.querySelectorAll('[data-name="category-accordion"]');
    
    accordions.forEach(accordion => {
      const body = accordion.querySelector('[data-accordion-body]');
      const icon = accordion.querySelector('[data-accordion-icon]');
      
      if (body && icon) {
        // 初始化图标状态
        if (body.style.maxHeight === "0px") {
          icon.classList.remove('rotate-180');
        } else {
          icon.classList.add('rotate-180');
        }
      }
    });
  }
  
  // 页面加载后初始化
  document.addEventListener('DOMContentLoaded', initialize);
  
  // 确保在页面转换后也能正确初始化
  document.addEventListener('astro:page-load', initialize);
</script> 